# example config
#   - interpolating 1/sigma_crit for each source created from p(z)
#       - thus the zlvals are included here
#   - lensfit style shear estimate
#   - using mask style "equatorial" for quadrant mask flags

# cosmology parameters
H0      = 70
omega_m = 0.3

# nside for healpix
healpix_nside = 64

# masking style, for quadrant cuts. "none" "sdss", "equatorial"
mask_style = "equatorial"

# shear style
#  "reduced": ordinary reduced shear, source catalog rows are like
#      ra dec g1 g2 weight ...
#  "lensfit": for lensfit with sensitivities
#      ra dec g1 g2 g1sens g2sens weight ...
#  "metacal": for metacal with response tensor g1sens=R11, g2sens=R22, g12sens=(R12+R21)/2 
#      ra dec g1 g2 g1sens g2sens g12sens weight ...

shear_style = "lensfit"

# number of logarithmically spaced radial bins to use
nbin = 21

# min and max radius in Mpc
rmin = 0.02
rmax = 35.15

# sigma crit style
#   "point": point z for sources. Implies the last column in source cat is z
#  "interp": Interpolate 1/sigma_crit calculated from full P(z)).
#            Implies last N columns in source cat are 1/sigma_crit(zlens)_i
#  "sample": random sample of p(z). Implies the second-to-last column in
#            source cat is a mean-z estimate to be used for weighting and
#            last column in source cat contains a random sample from the p(z). 


sigmacrit_style = "interp"

# zlens values for the \Sigam_{crit}(zlens) values tabulated for each source
# note the elements of arrays can be separated by either spaces or commas

zlvals = [ 0.          0.01532258  0.03064516  0.04596774  0.06129032  0.0766129
  0.09193548  0.10725806  0.12258065  0.13790323  0.15322581  0.16854839
  0.18387097  0.19919355  0.21451613  0.22983871  0.24516129  0.26048387
  0.27580645  0.29112903  0.30645161  0.32177419  0.33709677  0.35241935
  0.36774194  0.38306452  0.3983871   0.41370968  0.42903226  0.44435484
  0.45967742  0.475       0.49032258  0.50564516  0.52096774  0.53629032
  0.5516129   0.56693548  0.58225806  0.59758065  0.61290323  0.62822581
  0.64354839  0.65887097  0.67419355  0.68951613  0.70483871  0.72016129
  0.73548387  0.75080645  0.76612903  0.78145161  0.79677419  0.81209677
  0.82741935  0.84274194  0.85806452  0.8733871   0.88870968  0.90403226
  0.91935484  0.93467742  0.95      ]
